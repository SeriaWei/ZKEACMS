@model MessageEntity
@{
    Script.Reqiured("validate").AtFoot();
}
<div class="message">
    @if (ViewContext.HttpContext.Request.Cookies.Any(key => key.Key == "Message"))
    {
        <div class="alert alert-info">
            <h4>@L("Thank You for your submit!")</h4>
        </div>
    }
    @using (Html.BeginForm("PostMessage", "MessageHandle", FormMethod.Post))
    {
        @Html.HiddenFor(m => m.Status)
        @Html.HiddenFor(m => m.Description)
        @Html.HiddenFor(m => m.Reply)
        <input type="hidden" value="@ViewContext.HttpContext.Request.Path.ToString()" name="redirect" />
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.Title)
                    @Html.TextBoxFor(m => m.Title, new { @class = "form-control", placeholder = L("Your name").Text })
                    @Html.ValidationMessageFor(m => m.Title)
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.Email)
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = L("Your email address").Text })
                    @Html.ValidationMessageFor(m => m.Email)
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    @Html.LabelFor(m => m.PostMessage)
                    @Html.TextAreaFor(m => m.PostMessage, new { @class = "form-control", rows = "10", placeholder = L("Have your say...").Text })
                    @Html.ValidationMessageFor(m => m.PostMessage)
                </div>
            </div>
        </div>
        <input type="submit" value="@L("Submit")" class="btn btn-default" />
    }
</div>