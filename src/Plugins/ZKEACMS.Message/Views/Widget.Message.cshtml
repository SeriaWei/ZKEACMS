@model MessageEntity
@{
    Script.Reqiured("validate").AtFoot();
}
<div class="message">
    @using (Html.BeginForm("PostMessage", "MessageHandle", FormMethod.Post))
    {
        @Html.HiddenForCurrentPagePath()
        @Html.HiddenFor(m => m.Status)
        @Html.HiddenFor(m => m.Description)
        @Html.HiddenFor(m => m.Reply)

        <div class="row">
            <div class="col-md-5">
                <div class="form-group">
                    @Html.LabelFor(m => m.Title)
                    @Html.TextBoxFor(m => m.Title, new { @class = "form-control", placeholder = L("Your name").Text })
                    @Html.ValidationMessageFor(m => m.Title)
                </div>
            </div>
            <div class="col-md-7">
                <div class="form-group">
                    @Html.LabelFor(m => m.Email)
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = L("Your email address").Text })
                    @Html.ValidationMessageFor(m => m.Email)
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    @Html.LabelFor(m => m.PostMessage)
                    @Html.TextAreaFor(m => m.PostMessage, new { @class = "form-control", rows = "10", placeholder = L("Have your say...").Text })
                    @Html.ValidationMessageFor(m => m.PostMessage)
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.EditorFor(m => m.Captcha)
                    @Html.ValidationMessageFor(m => m.Captcha)
                </div>
            </div>
            <div class="col-md-8">
                <input type="submit" value="@L("Submit")" class="btn btn-default pull-right" />
            </div>
        </div>
        @if (TempData["Message"] != null)
        {
            <p class="alert alert-info">
                @TempData["Message"]
            </p>
        }

    }
</div>